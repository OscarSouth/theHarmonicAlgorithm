tempo = 92

lmotif = "[1 . 0@3 1? . 0 1? . 0 1? 0@2]/4"

rosslynCastle =
  let
    a = fmap i <$> [
      [B,D,F'], [D,F',A], [C',E,G,Bb], [F',A,C',E],
      [G,B,D], [B,D,F'], [E,G,Bb,Db], [A,D,F',C],
      [G,B,D], [G',C',E,Bb], [A,F',C',E], [Bb,E,G,Db],
      [B,D,F'], [F',B,D], [G,B,D], [B,D,F']
      ]
    b = fmap i <$> [
      [G,B,D], [B,D,F'], [D,F',A], [G,Bb,Db,E],
      [G,B,D,F,A'], [A,C',E,G], [D,F',A,C], [F',A,C',E],
      [G,B,D], [G',C',E,Bb], [A,F',C',E], [Bb,E,G,Db],
      [B,D,F'], [F',B,D], [G,B,D], [B,D,F']
      ]
  in concatMap (\s -> if s == 'A' then a else b) "AABA"

melody =
  let
    a = [
      "[0 . 4@3 5 . 4 . 3 4]",
      "[5 4 . 3 2 . 1 . 2@3 1 ]",
      "[0 . 7@3 8 . 9 . 8 7 ]",
      "[6 7 . 8 6 . 4 . 2 3 ]",
      "[5 4 . 3 2 . 1 . 2 3 ]",
      "[4 2 . 1 0 . 6 . 7 8]",
      "[9 7 . 8 6 . 7 4 . 3 4 ]",
      "[2 0 . 1@3 [0 ~] . 0@3 ~ . 4 ]"
      ]
    b = [
      "[7 . 7 8 . 9 . 8 7]",
      "[11@3 10 . 9 10 . 8 . 7 6]",
      "[7 4 . 7 8 . 9 . 8 7]",
      "[11 10 . 9 10 . 8 . 3 4]",
      "[5 4 . 3 2 . 1 . 2 3 ]",
      "[4 2 . 1 0 . 6 . 7 8]",
      "[9 7 . 8 6 . 7 4 . 3 4 ]",
      "[2 0 . 1@3 [0 ~] . 0@3 ~ . 2 1 ]"
      ]
  in slow 4 . slowcat $ concatMap (
    \s -> if s == 'B' then b else a
    ) "AABA"

scales = [(+(-1)) <$> [0,2,3,5,7,8,11]] -- B harmonic minor

state = prog sharp rosslynCastle

melodyState = prog sharp scales

juno f s r d = p "juno" $ do
  let o = ch 16
  f
    $ stack [silence
       -- --
      ,mono $ arrange flow melodyState r (-9,12) ["~"
        ,melody
      ]# o |* vel 0.7 |+ oct 1
       -- --
    ] |* vel d

jazz f s r d = p "piano" $ do
  let o = ch 3
  f
    $ stack [silence
       -- --
      ,arrange flow (overlapF 0 s) r (-9,9) ["~"
        ,degradeBy 0.04 $ "[-1,0,1]*2" |* "[1 2]/4" |- "[0 1 2 3]/16"
      ]# o |* vel (slow 32 $ lfo saw 0.5 1.5) |= legato 0.125
       -- --
      ,struct lmotif $ arrange flow (overlapF 0 s) r (-9,9) ["~"
        ,"0"
      ]# o |* vel 1.4 |- oct "[3 2]*2" |= legato 0.6
       -- --
    ] |* vel d

k909 f d = p "909kit" $ do
  let o = ch 9
  f
    $ stack [silence
       -- --
      ,kick "1"
      -- ,snap "<0 1>" |* vel 0.4
      -- ,hh "[1 1 2 1]" |* vel (lfo saw 0.1 0.8)
      ,hh "0 1" |* vel (lfo saw 0.1 0.8)
       -- --
    ]# o # legato 0.01 |* vel d


kmpc f d = p "mpckit" $ do
  let o = ch 10
  f
    $ stack [silence
       -- --
      ,kick lmotif |* vel 0.9
      -- ,kick "[1 . 0@3 1? . 0 1? . 0 1? 0@2]/4" |* vel 0.9
      ,snare "[0 1]/2" |* vel 0.7
      ,sometimesBy 0.05 (>>hh "2") $ sometimesBy 0.01 (fast 2) $ degradeBy 0.1 $ hh "[1]*4" |* vel (lfo saw 0.1 0.7)
      -- ,sometimesBy 0.05 (>>hh "2") $ someCyclesBy 0.01 (fast 2) $ degradeBy 0.1 $ hh "[1]*4" |* vel (lfo saw 0.1 0.7)
       -- --
    ]# o # legato 0.01 |* vel d
