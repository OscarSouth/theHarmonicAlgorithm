hush

 -- CADENCE STATE
nextState <- gammaGen 1 0.2
  >>= \rns ->
  chainCadence sharp
  (initCadenceState (head rns) "C" [0,3,7]) -- init state
  -- (lastCadence state)
  (harmonicContext
  -- overtones
    "C Eb G"
  -- tonality
    "*"
  -- roots
    "*"
  )
  8 -- len
  3.5 -- entropy

state = nextState

do
  let
    dyn = slow 128 (lfo saw 0.3 0.7)
    rep = 0.5
    t = bpm 80
    s = excerpt 1 16 $ transpose (0) state
    f = (swingBy 0.07 2)
    -- k = keySig -- s 1 4
    (d,r) = ((*dyn),rep)
  putStrLn . show $ s
  mapM_ id [hush,p"t"t
    -- ,count s rep
    ,riser s r $d 0.99
    -- ,p08 f s r $d 0.99
    -- ,p09 f s r $d 0.99
    ,p10 f   $d 1
    ,p11 f
    -- ,p12 f s r $d 0.7
    ,p13 f s r $d 0.7
    ,p14 f s r $d 0.5
    ,p15 f s r $d 0.6
    -- ,p16 f s r $d 0.6
    ]

hush

 -- TRANSPORT
mapM_ id [p "transport"
  $ do
  let
    out = 999999
  --
  seqP
    $ sync out ++ [runSeq
  --
    ]
  --
  ,resetCycles
  ,hush
  ,allNotesOff
  -- ,setcps (80/60)
  ]

hush''
