hush

 -- CADENCE STATE
next <- gammaGen 1 0.3
  >>= \rns ->
  chainCadence sharp
  (initCadenceState (head rns) "E" [0,3,7])
  -- (lastCadence state)
  (harmonicContext
  -- overtones
    "A E G B"
  -- tonality
    "3# 1#"
  -- roots
    "E"
  )
  4 -- len
  2.5 -- entropy

state = rotate (0) next

do
  let
    dyn = 0.1 + qlink1
    rep = 4
    s = transpose (0) state
    f = (swingBy 0.07 2)
    (d,r) = ((*dyn),rep)
  putStrLn . show $ s
  mapM_ id [hush, setbpm tempo
    -- ,rise 32 s r $d 0.8
    -- ,metronome   $d 0.1
    -- ,count   s r $d 0.4
    -- ,sine  f s r $d 0.7
    -- ,jazz  f s r $d 0.7
    -- ,hboe  f s r $d 0.7
    -- ,lboe  f s r $d 0.7
    -- ,hmnx  f s r $d 0.7
    -- ,t303  f s r $d 0.7
    -- ,kmpc f      $d 0.7
    -- ,k909 f      $d 0.7
    -- ,moog  f s r $d 0.7
    -- ,mfam  f s r $d 0.7
    -- ,s101  f s r $d 0.7
    -- ,juno  f s r $d 0.7
    ]

 -- TRANSPORT
mapM_ id [p "transport"
  $ do
  let
    out = 999999
  --
  seqP
    $ sync out ++ [runSeq
  --
    ]
  --
  ,resetCycles
  ,hush
  ,allNotesOff
  ,setcps (tempo/60)
  ]

hush''
