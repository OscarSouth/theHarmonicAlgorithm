 -- CADENCE STATE
next <- gammaGen 1 0.3
  >>= \rns ->
  chainCadence sharp
  -- (initCadenceState (head rns) "G" [0,3,7])
  (lastCadence state)
  (harmonicContext
  -- overtones
    "*"
  -- tonality
    "*"
  -- roots
    "A"
  )
  4 -- len
  1.5 -- entropy

state = rotate (0) next

do
  let
    dyn = slow 32 (lfo saw 0.7 0.9)
    rep = bars -- 2
    s = transpose (0) state
    f = struct bellpat32 . (swingBy 0.07 2)
    (d,r) =((*dyn),rep)
  putStrLn$">>   LAUNCH¬¬"++show s
  mapM_ id [hush, setbpm tempo
    ,rise 64 s r $d 0.4
    -- ,metronome   $d 0.2
    ,count   s r $d 1
    -- ,sine  f s r $d 0.9
    -- ,lboe  f s r $d 0.7
    -- ,hmnx  f s r $d 0.99
    -- ,t303  f s r $d 0.5
    ,kmpc  f     $d 0.9
    ,k909  f     $d 0.4
    ,moog  f s r $d 0.8
    -- ,mfam  f s r $d 2
    ,s101  f s r $d 0.6
    ,juno  f s r $d 0.7
    ]

 -- TRANSPORT
mapM_ id [p "transport"
  $ do
  let
    out = 999999
  --
  seqP
    $ sync out ++ [runSeq
  --
    ]
  --
  ,resetCycles,hush,allNotesOff
  ,setcps (tempo/60)
  ]

hush
